#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB                &kp Q  &kp W  &kp E      &kp R  &kp T                                          &mmv MOVE_UP                     &kp Y                &kp U  &kp I            &kp O    &kp P     &kp BSPC
&mt LEFT_ALT CAPSLOCK  &kp A  &kp S  &kp D      &kp F  &kp G                          &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H                &kp J  &kp K            &kp L    &kp SEMI  &mt RIGHT_ALT SQT
&kp LEFT_SHIFT         &kp Z  &kp X  &kp C      &kp V  &kp B                &tog 1                    &mmv MOVE_DOWN                   &kp N                &kp M  &kp COMMA        &kp DOT  &kp FSLH  &mt LCTRL ENTER
                                     &kp LCTRL  &mo 2  &mt LEFT_GUI ESCAPE                                                             &mt RIGHT_GUI SPACE  &mo 3  &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        colemak {
            bindings = <
&kp TAB                &kp Q  &kp W  &kp F      &kp P  &kp G                                          &mmv MOVE_UP                     &kp J                &kp L  &kp U            &kp Y       &kp SEMICOLON  &kp BACKSPACE
&mt LEFT_ALT CAPSLOCK  &kp A  &kp S  &kp R      &kp T  &kp D                          &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H                &kp N  &kp E            &kp I       &kp O          &mt RIGHT_ALT SQT
&kp LEFT_SHIFT         &kp Z  &kp X  &kp C      &kp V  &kp B                &tog 1                    &mmv MOVE_DOWN                   &kp K                &kp M  &kp COMMA        &kp PERIOD  &kp SLASH      &mt LCTRL ENTER
                                     &kp LCTRL  &mo 2  &mt LEFT_GUI ESCAPE                                                             &mt RIGHT_GUI SPACE  &mo 3  &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "colemak";
        };

        lower_layer {
            display-name = "SYMBOL";
            bindings = <
&kp GRAVE  &kp EXCL      &kp AT        &kp HASH         &kp DLLR                           &kp PRCNT                                                         &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&trans     &bt BT_PRV    &bt BT_NXT    &mkp LCLK        &mkp RCLK                          &mkp MCLK                                         &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&trans     &out OUT_USB  &out OUT_BLE  &kp C_AC_SEARCH  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &trans
                                       &trans           &trans                             &trans                                                                                             &trans     &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "NUMBER";
            bindings = <
&tog 1  &kp N1           &kp N2          &kp N3           &kp N4        &kp N5                                          &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &trans
&trans  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &mt RIGHT_ALT PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &bt BT_CLR    &bt BT_CLR_ALL    &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &mt RSHIFT PAGE_DOWN
                                         &trans           &kp DELETE    &mt LEFT_GUI INS                                                                 &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &kp F1           &kp F2                &kp F3  &kp F4          &kp F5                                     &mmv MOVE_UP                     &kp F6       &kp F7           &kp F8           &kp F9           &kp F10          &kp F11
&trans  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_INC  &none   &bt BT_CLR      &sys_reset                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &sys_reset   &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &kp PRINTSCREEN  &mt RIGHT_ALT F12
&trans  &kp C_VOL_DN     &kp C_BRIGHTNESS_DEC  &none   &bt BT_CLR_ALL  &bootloader  &kp C_MUTE                    &mmv MOVE_DOWN                   &bootloader  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &kp SCROLLLOCK   &trans
                                               &trans  &trans          &trans                                                                      &trans       &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        misc {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
